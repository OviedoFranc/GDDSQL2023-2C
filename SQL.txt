SELECT * FROM gd_esquema.Maestra

--Tabla Inmueble
CREATE TABLE Inmueble (
    INMUEBLE_CODIGO INT PRIMARY KEY,
    INMUEBLE_NOMBRE VARCHAR(150),
    INMUEBLE_DESCRIPCION VARCHAR(MAX),
    INMUEBLE_DIRECCION VARCHAR(200),
    INMUEBLE_SUPERFICIETOTAL DECIMAL(10,2),
    INMUEBLE_ANTIGUEDAD INT,
    INMUEBLE_EXPESAS DECIMAL(10,2),
    INMUEBLE_BARRIO CHAR(25), -- FK
    INMUEBLE_LOCALIDAD CHAR(25), -- FK
    INMUEBLE_PROVINCIA CHAR(25), -- FK
    INMUEBLE_TIPO_INMUEBLE CHAR(25), -- FK
    INMUEBLE_CANT_AMBIENTES CHAR(25), -- FK
    INMUEBLE_ORIENTACION CHAR(25), -- FK
    INMUEBLE_DISPOSICION CHAR(25), -- FK
    INMUEBLE_ESTADO CHAR(25), -- FK
	PROPIETARIO_DNI INT --FK
);

-- Tabla Propietario
CREATE TABLE Propietario (
    PROPIETARIO_DNI INT PRIMARY KEY,
    PROPIETARIO_NOMBRE VARCHAR(100),
    PROPIETARIO_APELLIDO VARCHAR(100),
    PROPIETARIO_FECHA_REGISTRO DATE,
    PROPIETARIO_TELEFONO VARCHAR(20),
    PROPIETARIO_MAIL VARCHAR(100),
    PROPIETARIO_FECHA_NAC DATE
);

-- Tabla Anuncio
CREATE TABLE Anuncio (
    ANUNCIO_CODIGO INT PRIMARY KEY,
    ANUNCIO_FECHA_PUBLICACION DATE,
    ANUNCIO_PRECIO_PUBLICADO DECIMAL(10,2),
    ANUNCIO_COSTO_ANUNCIO DECIMAL(10,2),
    ANUNCIO_FECHA_FINALIZACION DATE,
    ANUNCIO_TIPO_OPERACION CHAR(25), -- FK
    ANUNCIO_MONEDA CHAR(25), -- FK
    ANUNCIO_ESTADO CHAR(25), -- FK
	AGENTE_DNI INT,
    ANUNCIO_TIPO_PERIODO CHAR(25), -- FK
	INMUEBLE_CODIGO INT -- FK
);

-- Tabla Agente
CREATE TABLE Agente (
    AGENTE_DNI INT PRIMARY KEY,
    AGENTE_NOMBRE VARCHAR(100),
    AGENTE_APELLIDO VARCHAR(100),
    AGENTE_FECHA_REGISTRO DATE,
    AGENTE_TELEFONO VARCHAR(20),
    AGENTE_MAIL VARCHAR(100),
    AGENTE_FECHA_NAC DATE,
	SUCURSAL_CODIGO INT --FK
);

-- Tabla Sucursal
CREATE TABLE Sucursal (
    SUCURSAL_CODIGO INT PRIMARY KEY,
    SUCURSAL_NOMBRE VARCHAR(100),
    SUCURSAL_DIRECCION VARCHAR(200),
    SUCURSAL_TELEFONO VARCHAR(20),
    SUCURSAL_LOCALIDAD CHAR(25), -- FK
    SUCURSAL_PROVINCIA CHAR(25) -- FK
);

-- Tabla Caracteristica
CREATE TABLE Caracteristica (
    CARACTERISTICA CHAR(25) PRIMARY KEY,
);

-- Tabla Inmueble_caracteristica (Relación entre Inmueble y Caracteristica)
CREATE TABLE Inmueble_caracteristica (
    INMUEBLE_ID INT, -- FK
    CARACTERISTICA CHAR(25), -- FK
	 PRIMARY KEY (INMUEBLE_ID, CARACTERISTICA)
);

-- Tabla Venta
CREATE TABLE Venta (
    VENTA_CODIGO INT PRIMARY KEY,
	ANUNCIO_CODIGO INT, -- FK
    VENTA_FECHA DATE,
    VENTA_PRECIO_VENTA DECIMAL(10,2),
    VENTA_COMISION DECIMAL(10,2),
    VENTA_MONEDA CHAR(25) -- FK
);

 -- Tabla Pago_venta
CREATE TABLE Pago_venta (
    PAGO_VENTA_CODIGO INT PRIMARY KEY,
	VENTA_CODIGO INT, --FK
    PAGO_VENTA_IMPORTE DECIMAL(10,2),
    PAGO_VENTA_MONEDA CHAR(25), -- FK
    PAGO_VENTA_COTIZACION DECIMAL(10,2),
    PAGO_VENTA_MEDIO_PAGO CHAR(25) -- FK
);

-- Tabla Comprador
CREATE TABLE Comprador (
    COMPRADOR_DNI INT PRIMARY KEY,
    COMPRADOR_NOMBRE VARCHAR(100),
    COMPRADOR_APELLIDO VARCHAR(100),
    COMPRADOR_FECHA_REGISTRO DATE,
    COMPRADOR_TELEFONO VARCHAR(20),
    COMPRADOR_MAIL VARCHAR(100),
    COMPRADOR_FECHA_NAC DATE
);

-- Tabla Alquiler
CREATE TABLE Alquiler (
    ALQUILER_CODIGO INT PRIMARY KEY,
    ALQUILER_FECHA_INICIO DATE,
    ALQUILER_FECHA_FIN DATE,
	SUCURSAL_CODIGO INT,
    ALQUILER_CANT_PERIODOS INT,
    ALQUILER_DEPOSITO DECIMAL(10,2),
    ALQUILER_COMISION DECIMAL(10,2),
	TIPO_PERIODO CHAR(25), --FK
    ALQUILER_GASTOS_AVERIGUA DECIMAL(10,2),
    ALQUILER_ESTADO CHAR(25), -- FK
	ANUNCIO_CODIGO INT,	--FK
	INQUILINO_DNI INT -- FK
);

-- Tabla Inquilino
CREATE TABLE Inquilino (
    INQUILINO_DNI INT PRIMARY KEY,
    INQUILINO_NOMBRE VARCHAR(100),
    INQUILINO_APELLIDO VARCHAR(100),
    INQUILINO_FECHA_REGISTRO DATE,
    INQUILINO_TELEFONO VARCHAR(20),
    INQUILINO_MAIL VARCHAR(100),
    INQUILINO_FECHA_NAC DATE
);

-- Tabla Detalle_importe_alquiler
CREATE TABLE Detalle_importe_alquiler (
    DETALLE_ALQ_ID INT PRIMARY KEY,
	ALQUILER_CODIGO INT, --FK
    DETALLE_ALQ_NRO_PERIODO_INI INT,
    DETALLE_ALQ_NRO_PERIODO_FIN INT,
    DETALLE_ALQ_PRECIO DECIMAL(10,2)
);

-- Tabla Pago_alquiler
CREATE TABLE Pago_alquiler (
    PAGO_ALQUILER_CODIGO INT PRIMARY KEY,
	ALQUILER_CODIGO INT, --FK
    PAGO_ALQUILER_FECHA DATE,
    PAGO_ALQUILER_FECHA_VENCIMIENTO DATE,
    PAGO_ALQUILER_NRO_PERIODO INT,
    PAGO_ALQUILER_DESC VARCHAR(200),
    PAGO_ALQUILER_FEC_INI DATE,
    PAGO_ALQUILER_FEC_FIN DATE,
    PAGO_ALQUILER_IMPORTE DECIMAL(10,2),
    PAGO_ALQUILER_MEDIO_PAGO CHAR(25), --FK
	DETALLE_ALQ_ID INT, --FK
);

------------------------------  TABLAS TIPIFICADAS -------------------------------------

-- Tabla Provincia
CREATE TABLE Provincia (
    PROVINCIA CHAR(25) PRIMARY KEY,
);

-- Tabla Localidad
CREATE TABLE Localidad (
    LOCALIDAD CHAR(25) PRIMARY KEY,
);

-- Tabla Barrio
CREATE TABLE Barrio (
    BARRIO CHAR(25) PRIMARY KEY,
);

-- Tabla Tipo_inmueble
CREATE TABLE Tipo_inmueble (
    TIPO_INMUEBLE CHAR(25) PRIMARY KEY,
);

-- Tabla Cant_inmuebles
CREATE TABLE Cant_ambientes (
    CANT_AMBIENTES CHAR(25) PRIMARY KEY,
);

-- Tabla Orientacion
CREATE TABLE Orientacion (
    ORIENTACION CHAR(25) PRIMARY KEY,
);

-- Tabla Disposicion
CREATE TABLE Disposicion (
    DISPOSICION CHAR(25) PRIMARY KEY,
);

-- Tabla Estado_inmueble
CREATE TABLE Estado_inmueble (
    ESTADO_INMUEBLE CHAR(25) PRIMARY KEY,
);

-- Tabla Tipo_periodo
CREATE TABLE Tipo_periodo (
    TIPO_PERIODO CHAR(25) PRIMARY KEY,
);

-- Tabla Estado_anuncio
CREATE TABLE Estado_anuncio (
    ESTADO_ANUNCIO CHAR(25) PRIMARY KEY,
);

-- Tabla Moneda
CREATE TABLE Moneda (
    MONEDA CHAR(25) PRIMARY KEY,
);

-- Tabla Tipo_operacion
CREATE TABLE Tipo_operacion (
    TIPO_OPERACION CHAR(25) PRIMARY KEY,
);

-- Tabla Medio_pago
CREATE TABLE Medio_pago (
    MEDIO_PAGO CHAR(25) PRIMARY KEY,
);

-- Tabla Alquiler_estado
CREATE TABLE Alquiler_estado (
    ALQUILER_ESTADO CHAR(25) PRIMARY KEY,
);


------------------------------------------------------------------------ Pruebas y comprobaciones de que es lo que tenemos que pasar en limpio  --------------------------------------------------------- 

---- seleccion personalizada para uno de los 3 casos, en este consiste en agarrar todos los anuncios y el alquiler correspondiente, para ver tambien todos los pagos hechos 
-- Es el caso 1 de 3 
SELECT * 
FROM gd_esquema.Maestra  
WHERE 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL AND 
    ALQUILER_CODIGO IS NOT NULL AND 
    INQUILINO_DNI IS NOT NULL;
	
	-- Este caso es donde estoy seteando un inmueble con un anuncio en particular y su dueño.
-- Es el caso 2 de 3 
SELECT * 
FROM gd_esquema.Maestra  
WHERE 
    INMUEBLE_CODIGO IS NOT NULL AND 
    PROPIETARIO_DNI IS NOT NULL AND 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL;

	-- Este caso es donde estoy seteando un anuncio con una venta, su comprador y pago venta correspondiente
-- Es el caso 3 de 3 
SELECT * 
FROM gd_esquema.Maestra  
WHERE 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL AND 
    VENTA_CODIGO IS NOT NULL AND 
    COMPRADOR_DNI IS NOT NULL;



	     -------------------------Esto es de prueba, es para demostrar que existen inmuebles que son publicados con su anuncio correspondiente, para POSTERIORMENTE setearle los alquileres.
	-- Selecciona los ANUNCIO_CODIGO del Caso 1 de 3
SELECT DISTINCT ANUNCIO_CODIGO
FROM gd_esquema.Maestra  
WHERE 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL AND 
    ALQUILER_CODIGO IS NOT NULL AND 
    INQUILINO_DNI IS NOT NULL

INTERSECT

-- Selecciona los ANUNCIO_CODIGO del Caso 2 de 3
SELECT DISTINCT ANUNCIO_CODIGO
FROM gd_esquema.Maestra  
WHERE 
    INMUEBLE_CODIGO IS NOT NULL AND 
    PROPIETARIO_DNI IS NOT NULL AND 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL;

																---------- Comprobacion para saber si los anuncios del caso 1 (un anuncio con su correspondiente alquiler)
																---------- Son mayores al caso 2 (Cada anuncio corresponde a un alquiler)

	-- Paso 1: Contar la cantidad de ANUNCIO_CODIGO distintos en cada caso.

-- Cantidad de ANUNCIO_CODIGO distintos en Caso 1 de 3
SELECT COUNT(DISTINCT ANUNCIO_CODIGO) AS Count_Caso1
FROM gd_esquema.Maestra  
WHERE 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL AND 
    ALQUILER_CODIGO IS NOT NULL AND 
    INQUILINO_DNI IS NOT NULL;

-- Cantidad de ANUNCIO_CODIGO distintos en Caso 2 de 3
SELECT COUNT(DISTINCT ANUNCIO_CODIGO) AS Count_Caso2
FROM gd_esquema.Maestra  
WHERE 
    INMUEBLE_CODIGO IS NOT NULL AND 
    PROPIETARIO_DNI IS NOT NULL AND 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL;

-- Paso 2: Comparar los ANUNCIO_CODIGO distintos de ambos casos.

-- Usaré una tabla temporal para facilitar la consulta
SELECT DISTINCT ANUNCIO_CODIGO
INTO #TempCaso1
FROM gd_esquema.Maestra  
WHERE 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL AND 
    ALQUILER_CODIGO IS NOT NULL AND 
    INQUILINO_DNI IS NOT NULL;

-- Comparar con el Caso 2 de 3
SELECT ANUNCIO_CODIGO
FROM gd_esquema.Maestra  
WHERE 
    INMUEBLE_CODIGO IS NOT NULL AND 
    PROPIETARIO_DNI IS NOT NULL AND 
    ANUNCIO_CODIGO IS NOT NULL AND 
    AGENTE_DNI IS NOT NULL AND 
    SUCURSAL_CODIGO IS NOT NULL
AND ANUNCIO_CODIGO NOT IN (SELECT ANUNCIO_CODIGO FROM #TempCaso1);

-- puedes eliminar la tabla temporal cuando hayas terminado la comprobacion
DROP TABLE #TempCaso1;
	
																				--- Lo que nos indica esto es que el conteo 1 es menor al conteo 2
																				-- esto significa que pueden existir inmuebles que tengan un anuncio correspondiente y quiza nunca alquilado ni nada
																				-- por lo tanto siempre debemos crear los anuncios con su inmueble correspondiente, y luego hacer el caso 1 y 3



																				--- Esta comprobacion nos indica que todos los del caso 2 (osea inmueble con su anuncio) se encuentran en
																				-- el caso 1 (anuncio con su alquiler)
																				-- mostrando que primero debemos hacer caso 2 y luego caso 1 y 3 
-- Determinar cuántos ANUNCIO_CODIGO del Caso 2 también están en el Caso 1
SELECT COUNT(DISTINCT m2.ANUNCIO_CODIGO)
FROM gd_esquema.Maestra m2
WHERE 
    m2.INMUEBLE_CODIGO IS NOT NULL AND 
    m2.PROPIETARIO_DNI IS NOT NULL AND 
    m2.ANUNCIO_CODIGO IS NOT NULL AND 
    m2.AGENTE_DNI IS NOT NULL AND 
    m2.SUCURSAL_CODIGO IS NOT NULL
AND m2.ANUNCIO_CODIGO IN (
    SELECT DISTINCT m1.ANUNCIO_CODIGO
    FROM gd_esquema.Maestra m1
    WHERE 
        m1.ANUNCIO_CODIGO IS NOT NULL AND 
        m1.AGENTE_DNI IS NOT NULL AND 
        m1.SUCURSAL_CODIGO IS NOT NULL AND 
        m1.ALQUILER_CODIGO IS NOT NULL AND 
        m1.INQUILINO_DNI IS NOT NULL
);

																	
																	--------------- FIN DE COMPROBACIONES ------------------

------------------------------------------------------------------------          Comiendo del script sql               --------------------------------------------------------- 


	---  FILTRADO DE TODAS LAS SUCURSALES DISTINTAS
SELECT DISTINCT SUCURSAL_CODIGO, SUCURSAL_NOMBRE, SUCURSAL_DIRECCION, SUCURSAL_TELEFONO, SUCURSAL_LOCALIDAD, SUCURSAL_PROVINCIA
INTO #TempSucursal
FROM gd_esquema.Maestra
WHERE SUCURSAL_CODIGO IS NOT NULL;

SELECT * FROM #TempSucursal;

	---  FILTRADO DE TODOS LAS AGENTES DISTINTOS
SELECT DISTINCT AGENTE_DNI, AGENTE_NOMBRE, AGENTE_APELLIDO, AGENTE_MAIL, AGENTE_TELEFONO, AGENTE_FECHA_REGISTRO ,AGENTE_FECHA_NAC, SUCURSAL_CODIGO
INTO #TempAgente
FROM gd_esquema.Maestra
WHERE AGENTE_DNI IS NOT NULL AND SUCURSAL_CODIGO IS NOT NULL;

SELECT * FROM #TempAgente;
